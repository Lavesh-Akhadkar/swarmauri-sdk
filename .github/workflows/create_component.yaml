name: Create New Component from Feature Request

on:
  issues:
    types:
      - opened

jobs:
  create-component:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Clean Issue Title and Convert to PascalCase
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          # Remove "[Feature Request]:", trim spaces, and convert to PascalCase
          CLEANED_TITLE=$(echo "${ISSUE_TITLE}" | sed 's/\[Feature Request\]://g' | sed 's/^ *//;s/ *$//' | awk '{for (i=1; i<=NF; i++) $i=toupper(substr($i,1,1)) tolower(substr($i,2));}1' OFS='')

          # Print the cleaned title
          echo "Cleaned Title (PascalCase): $CLEANED_TITLE"

          # Set the cleaned title as an environment variable for later steps
          echo "CLEANED_TITLE=$CLEANED_TITLE" >> $GITHUB_ENV

      - name: Create Component Folder
        env:
          CLEANED_TITLE: ${{ env.CLEANED_TITLE }}
          AUTHOR_NAME: ${{ github.event.issue.user.login }}
          AUTHOR_EMAIL: ${{ github.event.issue.user.login }}@example.com
        run: |
          python scripts/create_component.py \
            --template .config/component_generator/templates/component \
            --output components/${{ env.CLEANED_TITLE }} \
            --placeholders package_name=${{ env.CLEANED_TITLE }} author_name=${{ env.AUTHOR_NAME }} author_email=${{ env.AUTHOR_EMAIL }} year=$(date +%Y)

      - name: Create New Git Branch
        env:
          CLEANED_TITLE: ${{ env.CLEANED_TITLE }}
        run: |
          # Create and switch to the new branch
          git checkout -b feature/${CLEANED_TITLE}
          echo "Created and switched to branch feature/${CLEANED_TITLE}"

      - name: Configure Git User
        run: |
          git config user.name "Create Component Bot"
          git config user.email "actions@github.com"
      
      - name: Commit Changes
        env:
          CLEANED_TITLE: ${{ env.CLEANED_TITLE }}
        run: |
          # Stage all changes and commit
          git add .
          git commit -m "feat: add new component - ${CLEANED_TITLE}"
          echo "Committed changes to branch feature/${CLEANED_TITLE}"

      - name: Push Branch to GitHub
        env:
          CLEANED_TITLE: ${{ env.CLEANED_TITLE }}
        run: |
          # Push the new branch to GitHub
          git push origin feature/${CLEANED_TITLE}
          echo "Pushed branch feature/${CLEANED_TITLE} to GitHub"

      - name: Create Pull Request
        env:
          CLEANED_TITLE: ${{ env.CLEANED_TITLE }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create a pull request from the new branch to the master branch
          PR_TITLE="feat: add new component - ${CLEANED_TITLE}"
          PR_BODY="This pull request introduces a new component created from the feature request."
          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -d '{"title": "'"${PR_TITLE}"'", "head": "feature/'"${CLEANED_TITLE}"'", "base": "master", "body": "'"${PR_BODY}"'"}' \
            https://api.github.com/repos/${{ github.repository }}/pulls

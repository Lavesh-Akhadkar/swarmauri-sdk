name: Test and Publish Release

on:
  push:
    branches: ["*dev*"]
    tags: ["v*"]
    paths:
      - 'pkgs/community/**'
      - 'pkgs/core/**'
      - 'pkgs/experimental/**'
      - 'pkgs/partners/**'
      - 'pkgs/swarmauri/**'

jobs:
  detect-changes:
    runs-on: self-hosted
    outputs:
      packages: ${{ steps.packages.outputs.packages }}

    steps:
      - uses: actions/checkout@v4
      - name: Detect Changed Packages
        id: packages
        run: |
          git fetch origin ${{ github.event.before }}
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          CHANGED_PACKAGES=$(cat changed_files.txt | grep -oE '^pkgs/(community|core|experimental|partners|swarmauri)' | cut -d/ -f2 | sort -u | tr '\n' ',' | sed 's/,$//')
    
          if [ -z "$CHANGED_PACKAGES" ]; then
            CHANGED_PACKAGES_ARRAY="[]"
          else
            CHANGED_PACKAGES_ARRAY=$(echo "[\"$(echo $CHANGED_PACKAGES | sed 's/,/","/g')\"]")
          fi

          echo "packages=$CHANGED_PACKAGES_ARRAY" >> $GITHUB_OUTPUT

  test:
    needs: detect-changes
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        package: ${{ fromJSON(needs.detect-changes.outputs.packages) }}

    env:
      # Model Provider Keys and other environment variables...
      PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "PATH=$HOME/.local/bin:$PATH" >> $GITHUB_ENV

      - name: Create unique virtual environment for package
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          python -m venv $UNIQUE_VENV_PATH
          # Activate the virtual environment in each step that needs it by specifying the source command

      - name: Install dependencies with Poetry
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          poetry install --no-cache -vv

      - name: Lint with flake8
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Build package with Poetry
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          poetry build

      - name: Install built package
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          LATEST_WHL=$(ls dist/*.whl | sort -V | tail -n 1)
          python -m pip install "$LATEST_WHL" --no-cache-dir

      - name: Get pip freeze
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          pip freeze

      - name: List package sizes
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          python ../../scripts/list_package_sizes.py
        continue-on-error: false

      - name: Show total package size
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          python ../../scripts/total_site_packages_size.py
        continue-on-error: false

      - name: Run tests
        continue-on-error: true
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          poetry run pytest -v . --junitxml=results.xml

      - name: Output test results for debugging
        run: |
          ls
          cat results.xml

      - name: Classify test results
        run: |
          UNIQUE_VENV_PATH=".venv_${{ github.run_id }}_${{ matrix.package }}"
          source $UNIQUE_VENV_PATH/bin/activate
          python ../../scripts/classify_results.py results.xml
        continue-on-error: false

      - name: Publish to PyPI
        if: github.ref_type == 'tag' && success()  # Only publish on tag
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.DANGER_MASTER_PYPI_API_TOKEN }}
          packages_dir: dist
